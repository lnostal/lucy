import actions as a 
import random
from db import DB
import enums as en

class Commands():

   def __init__(self):
      self.act = a.Actions()
      self.not_hungry = False
      self.lucy_active = False
      pass

   # ----- money -----
#https://www.tinkoff.ru/cf/QjoW9LVrQ7
   def money(self):
      return "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∫–æ—à–∫—É (–Ω–∞ –æ–ø–ª–∞—Ç—É —Å–µ—Ä–≤–µ—Ä–∞):\nhttps://www.tinkoff.ru/cf/QjoW9LVrQ7"


   # ----- help -----

   def describe_commands(self, chat_id):
      description = """
/start\t–∏–Ω—Ñ–æ –æ —á–∞—Ç–µ
/help\t–ø–æ–¥—Å–∫–∞–∑–∫–∞

--–≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –∑–¥–µ—Å—å--
"""

      for action in list(en.User):
         description += '\n/{} -- {}'.format(action.name, action.value)

      description += "\n/lucy_active -- –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ—à–∞—á—å–∏ –¥–µ–π—Å—Ç–≤–∏—è"

      row = DB(chat_id)
      description += "\n/poops -- —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∫–∞—à–µ–∫ –≤ —á–∞—Ç–µ\n\nüí© –∫–∞–∫–∞—à–µ–∫ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {} üí©".format(row.getPoopsByAllTime())
         
      return description



   # ----- start -----

   def welcome(self, chat_id):
      welcome_message = """
‚ú® –∑–∞–≤–µ–¥–∏ –∫–æ—à–µ—á–∫—É –≤ —Å–≤–æ–µ–º —á–∞—Ç–∏–∫–µ ‚ú®
–ª—é—Å—è –Ω–µ –¥–∞—Å—Ç –∑–∞—Å–∫—É—á–∞—Ç—å

–≥–∞–π–¥ –ø–æ —á–∞—Ç—É:

{}
""".format(self.describe_commands(chat_id))
      return welcome_message

   def to_reply(self, action):
      return '–≤—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å ' + action.value + '\n'

   # ----- pet -----

   def pet(self):
      message = self.to_reply(en.User.pet)
      message += en.get_reply_action(en.Lucy_reply.wanna_pet, en.Lucy_reply.not_wanna_pet)
      return message

   # ----- yell -----
   def yell(self, chat_id):
      message = self.to_reply(en.User.yell)
      action = self.act.get_reply_action(en.Lucy_random.angry, en.Lucy_reply.ignore, en.Lucy_random.poop)
      message += action

      row = DB(chat_id)
      if action == en.Lucy_random.poop.value:
         row.addCurrentPoops(1)

      return message

   # ----- purr_pet -----
   def pet(self):
      message = self.to_reply(en.User.purr_pet)
      message += self.act.get_reply_action(en.Lucy_reply.wanna_pet, en.Lucy_reply.not_wanna_pet)
      return message

   # ----- scold -----
   def scold(self, chat_id):
      message = self.to_reply(en.User.scold)
      action = self.act.get_reply_action(en.Lucy_reply.not_worry, en.Lucy_reply.ignore, en.Lucy_random.angry, en.Lucy_random.poop)
      message += action

      row = DB(chat_id)
      if action == en.Lucy_random.poop.value:
         row.addCurrentPoops(1)

      return message

   # ----- purr_pet -----
   def purr_pet(self):
      message = self.to_reply(en.User.purr_pet)
      message += self.act.get_reply_action(en.Lucy_reply.wanna_pet, en.Lucy_reply.not_wanna_pet)
      return message

   # ----- clean -----
   def clean(self,chat_id):
      row = DB(chat_id)
      poop_count = row.getCurrentPoops()
      message = self.to_reply(en.User.clean)
      if poop_count == 0:
         return message + "–∞ —É–±–∏—Ä–∞—Ç—å-—Ç–æ –Ω–µ—á–µ–≥–æ!"
      
      if poop_count == 1:
         row.setCurrentPoops(0)
         message += "–∫–∞–∫–∞—à–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω—ã\n"
      elif poop_count >= 2:
         chances =  [True, True, False]
         chance = random.choice(chances)
         if not chance:
            poop_count = poop_count - int(poop_count/2)
            row.setCurrentPoops(poop_count)
            message += "–ø–æ–ª–æ–≤–∏–Ω–∞ –∫–∞–∫–∞—à–µ–∫ –ø—Ä–æ—Å—ã–ø–∞–ª–∞—Å—å –º–∏–º–æ –ø–∞–∫–µ—Ç–∏–∫–∞\n"
         else:
            message += "–∫–∞–∫–∞—à–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–±—Ä–∞–Ω—ã\n"
            row.setCurrentPoops(0)
      
      message += self.act.get_reply_action(en.Lucy_reply.worry, en.Lucy_reply.not_worry, en.Lucy_reply.ignore)
      return message


   # ----- play -----
   def play(self):
      message = self.to_reply(en.User.play)
      message += self.act.get_reply_action(en.Lucy_reply.wanna_play, en.Lucy_reply.ignore, en.Lucy_reply.not_worry)
      return message

   # ----- feed -----
   def feed(self):
      message = self.to_reply(en.User.feed)
      action = self.act.get_reply_action(en.Lucy_reply.wanna_eat, en.Lucy_reply.not_wanna_eat)
      message += action
      self.not_hungry = action == en.Lucy_reply.wanna_eat.value
      return message

   # ----- open_door -----
   def open_door(self):
      message = self.to_reply(en.User.open_door)
      message += self.act.get_reply_action(en.Lucy_reply.wanna_door, en.Lucy_reply.not_wanna_door)
      return message

   # ----- poops -----
   def poops(self, chat_id):
      row = DB(chat_id)
      poop_count = row.getCurrentPoops()

      message = "{}\n—Å–µ–π—á–∞—Å –≤ —á–∞—Ç–µ {} –∫–∞–∫–∞—à–µ–∫\n".format('üí©'*poop_count, poop_count)

      if poop_count == 0:
         message += "–≤—Å–µ —É–±—Ä–∞–Ω–æ, –≤ —á–∞—Ç–µ —á–∏—Å—Ç–æ—Ç–∞ –∏ –ø–æ—Ä—è–¥–æ–∫"

      elif poop_count < 6:
         message += "–Ω–∞–¥–æ –±—ã —É–±—Ä–∞—Ç—å—Å—è"
      
      elif poop_count < 11:
         message = "–≤ —á–∞—Ç–µ —Å—Ç–æ–∏—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–π –∞—Ä–æ–º–∞—Ç. –Ω–∞ –ø–æ–ª—É —Ä–∞—Å—Å—ã–ø–∞–Ω—ã –∫–∞–∫–∏–µ-—Ç–æ –∫–æ—Ä–∏—á–Ω–µ–≤—ã–µ —à—Ç—É–∫–∏"
      
      elif poop_count < 21:
         message += "–≤–∞—à–∏–º –º–∞–º–∞–º –∑–∞ –≤–∞—Å —Å—Ç—ã–¥–Ω–æ"
      
      elif poop_count > 20:
         message += "–≤ —á–∞—Ç–µ –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –∫–æ—Ä–∏—á–Ω–µ–≤—ã–π –º–∞—Å—Å–∞–∂–Ω—ã–π –∫–æ–≤–µ—Ä. –æ—Ç–∫—É–¥–∞ –æ–Ω –∑–¥–µ—Å—å –∏ –ø–æ—á–µ–º—É —Ç–∞–∫ —Å—Ç—Ä–∞–Ω–Ω–æ –ø–∞—Ö–Ω–µ—Ç?"

      message += "\n\n–∫–∞–∫–∞—à–µ–∫ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {}".format(row.getPoopsByAllTime())
      return message
   
   # ----- poop -----

   def poop_interval(self):
      #return random.randint(1, 5) #–¥–ª—è —Ç–µ—Å—Ç–æ–≤
      return random.randint(3600, 10800) # –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç —á–∞—Å–∞ –¥–æ —Ç—Ä–µ—Ö
   
   def zoomies_interval(self):
      #return random.randint(1, 5) #–¥–ª—è —Ç–µ—Å—Ç–æ–≤
      return random.randint(1800,3600)

   def lucy_act(self):
      self.lucy_active = not self.lucy_active

      if self.lucy_active:
         return "–ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –∫–æ—à–µ—á–∫–∞ –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ —Å–µ–±–µ"
      
      return "–∫–æ—à–µ—á–∫–∞ —É—à–ª–∞ —Å–ø–∞—Ç—å –≤ —Å–≤–æ–π –¥–æ–º–∏–∫ –∏ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç —à—É—Ä—à–∞—Ç—å –ø–æ —á–∞—Ç—É"

   def pooped(self, chat_id):
      row = DB(chat_id)
      self.not_hungry = False

      poops = random.randint(1,4)

      msg = "–Ω–µ —Ç–∞–∫ –¥–∞–≤–Ω–æ –≤—ã –∫–æ—Ä–º–∏–ª–∏ –∫–æ—à–µ—á–∫—É\n"
      msg += en.Lucy_random.poop.value
      msg += "\n\n–≤ —á–∞—Ç–µ —Å—Ç–∞–ª–æ –Ω–∞ {} –∫–∞–∫–∞—à–∫–∏ –±–æ–ª—å—à–µ\n".format(poops)

      row.addCurrentPoops(poops)

      return msg
   

   # ----- triggers -----

   def trigger(self,message):  
      triggers = ["–µ–±–∞—Ç—å —Ç—É –ª—é—Å—é", "–ª—é—Å—è", "–ª—é—Å–µ", "–ª—é—Å—é", "–ª—é—Å–∏"]

      text = message.lower()
      answer = False

      for t in triggers:
         if t in text:
            answer = True
            break

      return answer

   # ----- begin -----
   def zoomies(self):
      return self.act.get_zoomies_action()
   # ----- random_sticker -----

   def random_sticker(self):
      stickers = [
         'CAACAgIAAxkBAAEmnFRlH8-sZCVjHbQBC5RyB0pf5IA99AACDDYAAihN4UhiZoZ0MM9NDDAE',
         'CAACAgIAAxkBAAEoDbBlbYY6EIZNi7skrkquYQWApeL3fwACOTsAApP3SUsYbgzulIOKWzME',
         'CAACAgIAAxkBAAEoDbJlbYY9nBDYiZY_RTmaWVi5CPg-NgACeCkAAo_pAUr5r4KMRPYXcTME',
         'CAACAgIAAxkBAAEoDbRlbYZRdbpAdYRTtsQ8PVT_zL3EEAACWysAAqYVAAFKL1bKNHUIlYAzBA',
         'CAACAgIAAxkBAAEoDbdlbYZZcjUaO2qcgEk0kUC0W_qTuAACeSAAAgSGCEocMJB0qFrXgDME',
         'CAACAgIAAxkBAAEoDbplbYZbgdUHTL_46KsR3GH1o5g61wACzyEAAoPDCUrEcMCwm6-mczME']
      
      return random.choice(stickers)